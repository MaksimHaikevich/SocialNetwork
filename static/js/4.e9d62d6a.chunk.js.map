{"version":3,"sources":["components/Navbar/Dialogs/Dialogs.module.css","components/Navbar/Dialogs/DialogItem/DialogItem.jsx","components/Navbar/Dialogs/Messages/Message.jsx","components/Navbar/Dialogs/Dialogs.jsx","components/Navbar/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","dialog","messages","message","DialogItem","props","path","concat","id","react_default","a","createElement","className","s","NavLink","to","name","Message","maxLength70","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","Textarea","placeholder","compose","connect","state","messagesPage","dispatch","sendMessageClick","newMessageBody","sendMessageCreator","withAuthRedirect","dialogsElements","map","d","DialogItem_DialogItem","messagesElements","m","Message_Message","values"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,2HCGLC,EAAa,SAACC,GACzB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEZ,QAChBQ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAASC,GAAIT,GAAOD,EAAMW,QCLnBC,EAAU,SAACZ,GACtB,OAAOI,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEV,SAAUE,EAAMF,2CC6BrCe,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAlBL,SAAChB,GACtB,OACEI,EAAAC,EAAAC,cAAA,QAAMY,SAAUlB,EAAMmB,cACpBf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUT,GACrBU,UAAWC,IACXb,KAAM,iBACNc,YAAa,wBAGjBrB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,iDC1BOoB,sBACbC,YAfoB,SAACC,GACrB,MAAO,CACLC,aAAcD,EAAMC,eAIC,SAACC,GACxB,MAAO,CACLC,iBAAkB,SAACC,GACjBF,EAASG,YAAmBD,QAOhCE,IAFaR,CDVQ,SAAC1B,GACtB,IAAImC,EAAkBnC,EAAM6B,aAAapC,QAAQ2C,IAAI,SAACC,GAAD,OACnDjC,EAAAC,EAAAC,cAACgC,EAAD,CAAY3B,KAAM0B,EAAE1B,KAAMR,GAAIkC,EAAElC,OAE9BoC,EAAmBvC,EAAM6B,aAAahC,SAASuC,IAAI,SAACI,GAAD,OACrDpC,EAAAC,EAAAC,cAACmC,EAAD,CAAS3C,QAAS0C,EAAE1C,YAMtB,OACEM,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEf,SAChBW,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEd,cAAeyC,GACjC/B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAEX,UAChBO,EAAAC,EAAAC,cAAA,WAAMiC,GACNnC,EAAAC,EAAAC,cAACS,EAAD,CAAqBG,SARP,SAACwB,GACnB1C,EAAM+B,iBAAiBW,EAAOV","file":"static/js/4.e9d62d6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__33eMa\",\"dialogsItems\":\"Dialogs_dialogsItems__3S3oI\",\"active\":\"Dialogs_active__3AWjo\",\"dialog\":\"Dialogs_dialog__30hOW\",\"messages\":\"Dialogs_messages__1amxt\",\"message\":\"Dialogs_message__3Bium\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const DialogItem = (props) => {\n  let path = `/dialogs/${props.id}`;\n  return (\n    <div className={s.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nexport const Message = (props) => {\n  return <div className={s.message}>{props.message}</div>;\n};\n\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport { DialogItem } from \"./DialogItem/DialogItem\";\nimport { Message } from \"./Messages/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validations/validators\";\n\nexport const Dialogs = (props) => {\n  let dialogsElements = props.messagesPage.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n  let messagesElements = props.messagesPage.messages.map((m) => (\n    <Message message={m.message} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.sendMessageClick(values.newMessageBody);\n  };\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogsItems}>{dialogsElements}</div>\n      <div className={s.messages}>\n        <div>{messagesElements}</div>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst maxLength70 = maxLengthCreator(70);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[required, maxLength70]}\n          component={Textarea}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message\"}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);","import React from \"react\";\nimport { sendMessageCreator } from \"../../../redux/messagesReducer\";\nimport { Dialogs } from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    messagesPage: state.messagesPage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessageClick: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\n"],"sourceRoot":""}